name: Build Windows App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 1. Check out your code
      - uses: actions/checkout@v3

      # 2. Set up Python (e.g., 3.10)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Set up environment variables for PyInstaller
      - name: Set up environment variables
        run: |
          setx /M PATH "%PATH%;C:\Python310;C:\Python310\Scripts"

      # 5. Build .exe with PyInstaller
      #    We explicitly point to ai_platform_trainer/main.py
      - name: Build ai_platform_trainer.exe
        run: |
          pip install pyinstaller
          pyinstaller ai_platform_trainer/main.py --onefile --name ai_platform_trainer
          # This creates dist/ai_platform_trainer.exe

      # 5. Upload the .exe so you can download it from the Actions UI
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4  # Note: use @v4 or latest
        with:
          name: AI Platform Trainer Windows
          path: dist/ai_platform_trainer.exe
